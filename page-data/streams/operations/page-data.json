{
    "componentChunkName": "component---src-templates-template-js",
    "path": "/streams/operations",
    "result": {"data":{"markdownRemark":{"html":"<p>Consider the following class:</p>\n<div class=\"gatsby-highlight\" data-language=\"java\"><pre class=\"language-java\"><code class=\"language-java\"><span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">TVShow</span> <span class=\"token punctuation\">{</span>\n   <span class=\"token class-name\">String</span> name<span class=\"token punctuation\">;</span>\n   <span class=\"token class-name\">String</span> category<span class=\"token punctuation\">;</span>\n   <span class=\"token keyword\">int</span> rating<span class=\"token punctuation\">;</span>\n   <span class=\"token keyword\">int</span> year<span class=\"token punctuation\">;</span>\n\n   <span class=\"token keyword\">public</span> <span class=\"token class-name\">TVShow</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">String</span> name<span class=\"token punctuation\">,</span> <span class=\"token keyword\">int</span> year<span class=\"token punctuation\">,</span> <span class=\"token class-name\">String</span> category<span class=\"token punctuation\">,</span> <span class=\"token keyword\">int</span> rating<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>name <span class=\"token operator\">=</span> name<span class=\"token punctuation\">;</span>\n      <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>year <span class=\"token operator\">=</span> year<span class=\"token punctuation\">;</span>\n      <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>category <span class=\"token operator\">=</span> category<span class=\"token punctuation\">;</span>\n      <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>rating <span class=\"token operator\">=</span> rating<span class=\"token punctuation\">;</span>\n   <span class=\"token punctuation\">}</span>\n\n   <span class=\"token keyword\">public</span> <span class=\"token class-name\">String</span> <span class=\"token function\">getQualifiedName</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n      <span class=\"token keyword\">return</span> <span class=\"token class-name\">String</span><span class=\"token punctuation\">.</span><span class=\"token function\">format</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"%s (%d)\"</span><span class=\"token punctuation\">,</span> name<span class=\"token punctuation\">,</span> year<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n   <span class=\"token punctuation\">}</span>\n\n   <span class=\"token annotation punctuation\">@Override</span>\n   <span class=\"token keyword\">public</span> <span class=\"token class-name\">String</span> <span class=\"token function\">toString</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token keyword\">return</span> <span class=\"token class-name\">String</span><span class=\"token punctuation\">.</span><span class=\"token function\">format</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"%-25s  Category: %-6s   Rating: %s\"</span><span class=\"token punctuation\">,</span> <span class=\"token function\">getQualifiedName</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> category<span class=\"token punctuation\">,</span> rating<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n   <span class=\"token punctuation\">}</span>\n\n   <span class=\"token comment\">// getters and setters</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<h2 id=\"filtering-a-stream\" style=\"position:relative;\"><a href=\"#filtering-a-stream\" aria-label=\"filtering a stream permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Filtering a stream</h2>\n<div class=\"gatsby-highlight\" data-language=\"java\"><pre class=\"language-java\"><code class=\"language-java\"><span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">ProcessingShows</span> <span class=\"token punctuation\">{</span>\n\n   <span class=\"token keyword\">public</span> <span class=\"token keyword\">static</span> <span class=\"token keyword\">void</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">String</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> args<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token class-name\">TVShow</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> shows <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n              <span class=\"token keyword\">new</span> <span class=\"token class-name\">TVShow</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Rick and Morty\"</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2013</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"Comedy\"</span><span class=\"token punctuation\">,</span> <span class=\"token number\">100</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n              <span class=\"token keyword\">new</span> <span class=\"token class-name\">TVShow</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Game of Thrones\"</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2011</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"Drama\"</span><span class=\"token punctuation\">,</span> <span class=\"token number\">92</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n              <span class=\"token keyword\">new</span> <span class=\"token class-name\">TVShow</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Stranger Things\"</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2016</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"Terror\"</span><span class=\"token punctuation\">,</span> <span class=\"token number\">90</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n              <span class=\"token keyword\">new</span> <span class=\"token class-name\">TVShow</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Friends\"</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1994</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"Comedy\"</span><span class=\"token punctuation\">,</span> <span class=\"token number\">99</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n              <span class=\"token keyword\">new</span> <span class=\"token class-name\">TVShow</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"House of Cards\"</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2013</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"Drama\"</span><span class=\"token punctuation\">,</span> <span class=\"token number\">85</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n              <span class=\"token keyword\">new</span> <span class=\"token class-name\">TVShow</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"The Walking Dead\"</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2010</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"Terror\"</span><span class=\"token punctuation\">,</span> <span class=\"token number\">78</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n              <span class=\"token keyword\">new</span> <span class=\"token class-name\">TVShow</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"The Good Place\"</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2016</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"Comedy\"</span><span class=\"token punctuation\">,</span> <span class=\"token number\">86</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n      <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n\n      <span class=\"token class-name\">List</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">TVShow</span><span class=\"token punctuation\">></span></span> list <span class=\"token operator\">=</span> <span class=\"token class-name\">Arrays</span><span class=\"token punctuation\">.</span><span class=\"token function\">asList</span><span class=\"token punctuation\">(</span>shows<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n      <span class=\"token comment\">// Displays all shows</span>\n      <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">printf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"TV shows:%n\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n      list<span class=\"token punctuation\">.</span><span class=\"token function\">stream</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">forEach</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token operator\">::</span><span class=\"token function\">println</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n      <span class=\"token comment\">// Predicate that returns true for ratings greater than 90</span>\n      <span class=\"token class-name\">Predicate</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">TVShow</span><span class=\"token punctuation\">></span></span> highRatings <span class=\"token operator\">=</span> tvShow <span class=\"token operator\">-></span> tvShow<span class=\"token punctuation\">.</span><span class=\"token function\">getRating</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">></span> <span class=\"token number\">90</span><span class=\"token punctuation\">;</span>\n\n      <span class=\"token comment\">// Displays only shows rated over 90 sorted by rating (ascending)</span>\n      <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">printf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"%nShows rated over 90:%n\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n      list<span class=\"token punctuation\">.</span><span class=\"token function\">stream</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n              <span class=\"token punctuation\">.</span><span class=\"token function\">filter</span><span class=\"token punctuation\">(</span>highRatings<span class=\"token punctuation\">)</span>\n              <span class=\"token punctuation\">.</span><span class=\"token function\">sorted</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">Comparator</span><span class=\"token punctuation\">.</span><span class=\"token function\">comparing</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">TVShow</span><span class=\"token operator\">::</span><span class=\"token function\">getRating</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n              <span class=\"token punctuation\">.</span><span class=\"token function\">forEach</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token operator\">::</span><span class=\"token function\">println</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n      <span class=\"token comment\">// Displays a show rated over 90</span>\n      <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">printf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"%nA show rated over 90:%n%s\"</span><span class=\"token punctuation\">,</span>\n              list<span class=\"token punctuation\">.</span><span class=\"token function\">stream</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n                      <span class=\"token punctuation\">.</span><span class=\"token function\">filter</span><span class=\"token punctuation\">(</span>highRatings<span class=\"token punctuation\">)</span>\n                      <span class=\"token punctuation\">.</span><span class=\"token function\">findAny</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n                      <span class=\"token punctuation\">.</span><span class=\"token function\">get</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n   <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<div class=\"gatsby-highlight\" data-language=\"output\"><pre class=\"language-output\"><code class=\"language-output\">TV shows:\nRick and Morty (2013)      Category: Comedy   Rating: 100\nGame of Thrones (2011)     Category: Drama    Rating: 92\nStranger Things (2016)     Category: Terror   Rating: 90\nFriends (1994)             Category: Comedy   Rating: 99\nHouse of Cards (2013)      Category: Drama    Rating: 85\nThe Walking Dead (2010)    Category: Terror   Rating: 78\nThe Good Place (2016)      Category: Comedy   Rating: 86\n\nShows rated over 90:\nGame of Thrones (2011)     Category: Drama    Rating: 92\nFriends (1994)             Category: Comedy   Rating: 99\nRick and Morty (2013)      Category: Comedy   Rating: 100\n\nA show rated over 90:\nRick and Morty (2013)      Category: Comedy   Rating: 100</code></pre></div>\n<h2 id=\"sorting-shows-by-multiple-fields\" style=\"position:relative;\"><a href=\"#sorting-shows-by-multiple-fields\" aria-label=\"sorting shows by multiple fields permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Sorting shows by multiple fields</h2>\n<div class=\"gatsby-highlight\" data-language=\"java\"><pre class=\"language-java\"><code class=\"language-java\"><span class=\"token class-name\">Function</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">TVShow</span><span class=\"token punctuation\">,</span> <span class=\"token class-name\">String</span><span class=\"token punctuation\">></span></span> byCategory <span class=\"token operator\">=</span> <span class=\"token class-name\">TVShow</span><span class=\"token operator\">::</span><span class=\"token function\">getCategory</span><span class=\"token punctuation\">;</span>\n<span class=\"token class-name\">Function</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">TVShow</span><span class=\"token punctuation\">,</span> <span class=\"token class-name\">Integer</span><span class=\"token punctuation\">></span></span> byRating <span class=\"token operator\">=</span> <span class=\"token class-name\">TVShow</span><span class=\"token operator\">::</span><span class=\"token function\">getRating</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token class-name\">Comparator</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">TVShow</span><span class=\"token punctuation\">></span></span> categoryThenRating <span class=\"token operator\">=</span>\n        <span class=\"token class-name\">Comparator</span><span class=\"token punctuation\">.</span><span class=\"token function\">comparing</span><span class=\"token punctuation\">(</span>byCategory<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">thenComparing</span><span class=\"token punctuation\">(</span>byRating<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">printf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"%nShows in ascending order by category and then rating: %n\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\nlist<span class=\"token punctuation\">.</span><span class=\"token function\">stream</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n        <span class=\"token punctuation\">.</span><span class=\"token function\">sorted</span><span class=\"token punctuation\">(</span>categoryThenRating<span class=\"token punctuation\">)</span>\n        <span class=\"token punctuation\">.</span><span class=\"token function\">forEach</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token operator\">::</span><span class=\"token function\">println</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">printf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"%nShows in descending order by category and then rating: %n\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\nlist<span class=\"token punctuation\">.</span><span class=\"token function\">stream</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n        <span class=\"token punctuation\">.</span><span class=\"token function\">sorted</span><span class=\"token punctuation\">(</span>categoryThenRating<span class=\"token punctuation\">.</span><span class=\"token function\">reversed</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n        <span class=\"token punctuation\">.</span><span class=\"token function\">forEach</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token operator\">::</span><span class=\"token function\">println</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<div class=\"gatsby-highlight\" data-language=\"output\"><pre class=\"language-output\"><code class=\"language-output\">Shows in ascending order by category and then rating: \nThe Good Place (2016)      Category: Comedy   Rating: 86\nFriends (1994)             Category: Comedy   Rating: 99\nRick and Morty (2013)      Category: Comedy   Rating: 100\nHouse of Cards (2013)      Category: Drama    Rating: 85\nGame of Thrones (2011)     Category: Drama    Rating: 92\nThe Walking Dead (2010)    Category: Terror   Rating: 78\nStranger Things (2016)     Category: Terror   Rating: 90\n\nShows in descending order by category and then rating: \nStranger Things (2016)     Category: Terror   Rating: 90\nThe Walking Dead (2010)    Category: Terror   Rating: 78\nGame of Thrones (2011)     Category: Drama    Rating: 92\nHouse of Cards (2013)      Category: Drama    Rating: 85\nRick and Morty (2013)      Category: Comedy   Rating: 100\nFriends (1994)             Category: Comedy   Rating: 99\nThe Good Place (2016)      Category: Comedy   Rating: 86</code></pre></div>\n<h2 id=\"mapping-shows-to-unique-category-strings\" style=\"position:relative;\"><a href=\"#mapping-shows-to-unique-category-strings\" aria-label=\"mapping shows to unique category strings permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Mapping shows to unique category strings</h2>\n<div class=\"gatsby-highlight\" data-language=\"java\"><pre class=\"language-java\"><code class=\"language-java\"><span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">printf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"%nUnique categories in ascending order: %n\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\nlist<span class=\"token punctuation\">.</span><span class=\"token function\">stream</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n        <span class=\"token punctuation\">.</span><span class=\"token function\">map</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">TVShow</span><span class=\"token operator\">::</span><span class=\"token function\">getCategory</span><span class=\"token punctuation\">)</span>\n        <span class=\"token punctuation\">.</span><span class=\"token function\">distinct</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n        <span class=\"token punctuation\">.</span><span class=\"token function\">sorted</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n        <span class=\"token punctuation\">.</span><span class=\"token function\">forEach</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token operator\">::</span><span class=\"token function\">println</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">printf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"%nDisplay title and year, but sorted by rating: %n\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\nlist<span class=\"token punctuation\">.</span><span class=\"token function\">stream</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n        <span class=\"token punctuation\">.</span><span class=\"token function\">sorted</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">Comparator</span><span class=\"token punctuation\">.</span><span class=\"token function\">comparing</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">TVShow</span><span class=\"token operator\">::</span><span class=\"token function\">getRating</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">reversed</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n        <span class=\"token punctuation\">.</span><span class=\"token function\">map</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">TVShow</span><span class=\"token operator\">::</span><span class=\"token function\">getQualifiedName</span><span class=\"token punctuation\">)</span>\n        <span class=\"token punctuation\">.</span><span class=\"token function\">forEach</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token operator\">::</span><span class=\"token function\">println</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<div class=\"gatsby-highlight\" data-language=\"output\"><pre class=\"language-output\"><code class=\"language-output\">Unique categories in ascending order: \nComedy\nDrama\nTerror\n\nDisplay title and year, but sorted by rating: \nRick and Morty (2013)\nFriends (1994)\nGame of Thrones (2011)\nStranger Things (2016)\nThe Good Place (2016)\nHouse of Cards (2013)\nThe Walking Dead (2010)</code></pre></div>\n<h2 id=\"grouping-shows-by-categories\" style=\"position:relative;\"><a href=\"#grouping-shows-by-categories\" aria-label=\"grouping shows by categories permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Grouping shows by categories</h2>\n<div class=\"gatsby-highlight\" data-language=\"java\"><pre class=\"language-java\"><code class=\"language-java\"><span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">printf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"%nShows grouped by category:%n\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token class-name\">Map</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">String</span><span class=\"token punctuation\">,</span> <span class=\"token class-name\">List</span><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">TVShow</span><span class=\"token punctuation\">></span><span class=\"token punctuation\">></span></span> map <span class=\"token operator\">=</span> list<span class=\"token punctuation\">.</span><span class=\"token function\">stream</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n        <span class=\"token punctuation\">.</span><span class=\"token function\">collect</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">Collectors</span><span class=\"token punctuation\">.</span><span class=\"token function\">groupingBy</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">TVShow</span><span class=\"token operator\">::</span><span class=\"token function\">getCategory</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\nmap<span class=\"token punctuation\">.</span><span class=\"token function\">forEach</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>category<span class=\"token punctuation\">,</span> tvShows<span class=\"token punctuation\">)</span> <span class=\"token operator\">-></span> <span class=\"token punctuation\">{</span>\n    <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">printf</span><span class=\"token punctuation\">(</span>\n            <span class=\"token string\">\"%s: %s%n\"</span><span class=\"token punctuation\">,</span>\n            category<span class=\"token punctuation\">,</span>\n            tvShows<span class=\"token punctuation\">.</span><span class=\"token function\">stream</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n                    <span class=\"token punctuation\">.</span><span class=\"token function\">map</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">TVShow</span><span class=\"token operator\">::</span><span class=\"token function\">getQualifiedName</span><span class=\"token punctuation\">)</span>\n                    <span class=\"token punctuation\">.</span><span class=\"token function\">collect</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">Collectors</span><span class=\"token punctuation\">.</span><span class=\"token function\">joining</span><span class=\"token punctuation\">(</span><span class=\"token string\">\", \"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<div class=\"gatsby-highlight\" data-language=\"output\"><pre class=\"language-output\"><code class=\"language-output\">Shows grouped by category:\nDrama: Game of Thrones (2011), House of Cards (2013)\nComedy: Rick and Morty (2013), Friends (1994), The Good Place (2016)\nTerror: Stranger Things (2016), The Walking Dead (2010)\n</code></pre></div>\n<h2 id=\"counting-shows-per-categories\" style=\"position:relative;\"><a href=\"#counting-shows-per-categories\" aria-label=\"counting shows per categories permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Counting shows per categories</h2>\n<div class=\"gatsby-highlight\" data-language=\"java\"><pre class=\"language-java\"><code class=\"language-java\"><span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">printf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"%nCount shows per category:%n\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token class-name\">Map</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">String</span><span class=\"token punctuation\">,</span> <span class=\"token class-name\">Long</span><span class=\"token punctuation\">></span></span> showCountByCategory <span class=\"token operator\">=</span> list<span class=\"token punctuation\">.</span><span class=\"token function\">stream</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n        <span class=\"token punctuation\">.</span><span class=\"token function\">collect</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">Collectors</span><span class=\"token punctuation\">.</span><span class=\"token function\">groupingBy</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">TVShow</span><span class=\"token operator\">::</span><span class=\"token function\">getCategory</span><span class=\"token punctuation\">,</span> <span class=\"token class-name\">TreeMap</span><span class=\"token operator\">::</span><span class=\"token keyword\">new</span><span class=\"token punctuation\">,</span> <span class=\"token class-name\">Collectors</span><span class=\"token punctuation\">.</span><span class=\"token function\">counting</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\nshowCountByCategory<span class=\"token punctuation\">.</span><span class=\"token function\">forEach</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>category<span class=\"token punctuation\">,</span> count<span class=\"token punctuation\">)</span> <span class=\"token operator\">-></span> <span class=\"token punctuation\">{</span>\n    <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">printf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"%s: %d%n\"</span><span class=\"token punctuation\">,</span> category<span class=\"token punctuation\">,</span> count<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<div class=\"gatsby-highlight\" data-language=\"output\"><pre class=\"language-output\"><code class=\"language-output\">Count shows per category:\nComedy: 3\nDrama: 2\nTerror: 2</code></pre></div>\n<!-- \n## Counting shows using a custom counter\n\n```java\npublic class ShowCountCollector implements Collector<TVShow, TreeMap<String, Integer>, Map<String, Integer>> {\n   @Override\n   public Supplier<TreeMap<String, Integer>> supplier() { return () -> new TreeMap<>(); }\n\n   @Override\n   public BiConsumer<TreeMap<String, Integer>, TVShow> accumulator() {\n      return (map, show) -> {\n         String category = show.getCategory();\n\n         if (!map.containsKey(category))\n            map.put(category, 0);\n\n         map.put(category, map.get(category) + 1);\n      };\n   }\n\n   @Override\n   public BinaryOperator<TreeMap<String, Integer>> combiner() {\n      return (map1, map2) -> {\n         map1.forEach((category, count) -> map2.merge(category, count, Integer::sum));\n         return map1;\n      };\n   }\n\n   @Override\n   public Function<TreeMap<String, Integer>, Map<String, Integer>> finisher() {\n      return map -> map;\n   }\n\n   @Override\n   public Set<Collector.Characteristics> characteristics() {\n      return EnumSet.of(Collector.Characteristics.IDENTITY_FINISH);\n   }\n}\n```\n\n## Counting shows using a custom counter\n\n```java\npublic class TVShowCustomCollector {\n   \n   public static void main(String[] args) {\n      TVShow[] shows = {\n              new TVShow(\"Rick and Morty\", 2013, \"Comedy\", 100),\n              new TVShow(\"Game of Thrones\", 2011, \"Drama\", 92),\n              new TVShow(\"Stranger Things\", 2016, \"Terror\", 90),\n              new TVShow(\"Friends\", 1994, \"Comedy\", 99),\n              new TVShow(\"House of Cards\", 2013, \"Drama\", 85),\n              new TVShow(\"The Walking Dead\", 2010, \"Terror\", 78),\n              new TVShow(\"The Good Place\", 2016, \"Comedy\", 86),\n      };\n\n      List<TVShow> list = Arrays.asList(shows);\n\n      Map<String, Integer> showsPerCategory = list.stream().collect(new ShowCountCollector());\n      System.out.println(showsPerCategory);\n   }\n\n}\n```\n\n```output\n{Comedy=3, Drama=2, Terror=2}\n```\n\n## Counting shows using a custom counter - simplified\n\n```java\npublic class TVShowCustomCollector {\n   public static void main(String[] args) {\n      TVShow[] shows = {\n              new TVShow(\"Rick and Morty\", 2013, \"Comedy\", 100),\n              new TVShow(\"Game of Thrones\", 2011, \"Drama\", 92),\n              new TVShow(\"Stranger Things\", 2016, \"Terror\", 90),\n              new TVShow(\"Friends\", 1994, \"Comedy\", 99),\n              new TVShow(\"House of Cards\", 2013, \"Drama\", 85),\n              new TVShow(\"The Walking Dead\", 2010, \"Terror\", 78),\n              new TVShow(\"The Good Place\", 2016, \"Comedy\", 86),\n      };\n\n      List<TVShow> list = Arrays.asList(shows);\n      Collector<TVShow, TreeMap<String, Integer>, Map<String, Integer>> showCounter =\n              Collector.of(\n                      TreeMap::new,\n                      (map, show) -> {\n                         String category = show.getCategory();\n\n                         if (!map.containsKey(category))\n                            map.put(category, 0);\n\n                         int count = map.get(category) + 1;\n                         map.put(category, count);\n                      },\n                      (map1, map2) -> {\n                         map1.forEach((category, count) -> map2.merge(category, count, Integer::sum));\n                         return map1;\n                      },\n                      map -> map);\n\n      // CONTINUES\n```\n\n## Counting shows using a custom counter - simplified\n\n```java\n\n      Map<String, Integer> showsPerCategory = list.stream().collect(showCounter);\n      System.out.println(showsPerCategory2);\n   }\n}\n```\n\n```output\n{Comedy=3, Drama=2, Terror=2}\n``` -->\n<h2 id=\"summing-and-averaging-show-ratings\" style=\"position:relative;\"><a href=\"#summing-and-averaging-show-ratings\" aria-label=\"summing and averaging show ratings permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Summing and averaging show ratings</h2>\n<div class=\"gatsby-highlight\" data-language=\"java\"><pre class=\"language-java\"><code class=\"language-java\"><span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">printf</span><span class=\"token punctuation\">(</span>\n        <span class=\"token string\">\"%nAverage show rating: %.2f%n\"</span><span class=\"token punctuation\">,</span>\n        list<span class=\"token punctuation\">.</span><span class=\"token function\">stream</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n                <span class=\"token punctuation\">.</span><span class=\"token function\">mapToInt</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">TVShow</span><span class=\"token operator\">::</span><span class=\"token function\">getRating</span><span class=\"token punctuation\">)</span>\n                <span class=\"token punctuation\">.</span><span class=\"token function\">average</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n                <span class=\"token punctuation\">.</span><span class=\"token function\">orElse</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">printf</span><span class=\"token punctuation\">(</span>\n        <span class=\"token string\">\"%nSum of show ratings: %d of %d\"</span><span class=\"token punctuation\">,</span>\n        list<span class=\"token punctuation\">.</span><span class=\"token function\">stream</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n                <span class=\"token punctuation\">.</span><span class=\"token function\">mapToInt</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">TVShow</span><span class=\"token operator\">::</span><span class=\"token function\">getRating</span><span class=\"token punctuation\">)</span>\n                <span class=\"token punctuation\">.</span><span class=\"token function\">reduce</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span>aggregated<span class=\"token punctuation\">,</span> value<span class=\"token punctuation\">)</span> <span class=\"token operator\">-></span> aggregated <span class=\"token operator\">+</span> value<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n        list<span class=\"token punctuation\">.</span><span class=\"token function\">size</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">*</span> <span class=\"token number\">100</span>\n<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<div class=\"gatsby-highlight\" data-language=\"output\"><pre class=\"language-output\"><code class=\"language-output\">Average show rating: 90,00\n\nSum of show ratings: 630 of 700</code></pre></div>","frontmatter":{"slug":"/streams/operations","title":"Operations","course":"Programming Project 2021/22","previous":"/streams/optionals","next":null,"chapter":11,"section":5,"module":"Streams","banner":null}}},"pageContext":{"slug":"/streams/operations"}},
    "staticQueryHashes": ["800307450"]}