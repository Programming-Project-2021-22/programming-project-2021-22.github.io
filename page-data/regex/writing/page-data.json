{
    "componentChunkName": "component---src-templates-template-js",
    "path": "/regex/writing",
    "result": {"data":{"markdownRemark":{"html":"<p>A regular expression (aka regex) defines a search pattern to be applied to strings.</p>\n<p>A search pattern can be anything from :</p>\n<ul>\n<li>a simple character</li>\n<li>a fixed string</li>\n<li>a complex expression containing special characters describing the pattern</li>\n</ul>\n<p>A pattern defined by the regex may match:</p>\n<ul>\n<li>one</li>\n<li>several times</li>\n<li>not at all</li>\n</ul>\n<p>Regular expressions can be used to:</p>\n<ul>\n<li>Search text</li>\n<li>Edit text</li>\n<li>Manipulate text</li>\n</ul>\n<p>The pattern defined by the regex is applied on the text from left to right [<a href=\"http://www.vogella.com/tutorials/JavaRegularExpressions/article.html\">Vogella</a>].</p>\n<h2 id=\"online-tools\" style=\"position:relative;\"><a href=\"#online-tools\" aria-label=\"online tools permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Online tools</h2>\n<ul>\n<li>\n<p><a href=\"https://regex101.com/\">https://regex101.com/</a></p>\n</li>\n<li>\n<p><a href=\"https://regexr.com/\">https://regexr.com/</a></p>\n</li>\n<li>\n<p><a href=\"https://www.regextester.com/\">https://www.regextester.com/</a></p>\n</li>\n</ul>\n<h2 id=\"regex-examples\" style=\"position:relative;\"><a href=\"#regex-examples\" aria-label=\"regex examples permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Regex examples</h2>\n<p>Here are some regex examples:</p>\n<table>\n<thead>\n<tr>\n<th>Regex</th>\n<th>Matches</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><code class=\"language-text\">this is text</code></td>\n<td>Matches exactly \"this is text\"</td>\n</tr>\n<tr>\n<td>```this\\s+is\\s+text`</td>\n<td>Matches the word \"this\" followed by <strong>one or more (<code class=\"language-text\">+</code>) whitespace characters (<code class=\"language-text\">\\s</code>)</strong> followed by the word \"is\" followed by one or more whitespace characters followed by the word \"text\".</td>\n</tr>\n<tr>\n<td><code class=\"language-text\">^\\d+(\\.\\d+)?</code></td>\n<td><code class=\"language-text\">^</code> defines that the pattern <strong>must start at beginning of a new line</strong>. <code class=\"language-text\">\\d+</code> matches <strong>one or more digits</strong>. The ? makes the statement in brackets <strong>optional (i.e. zero or more times</strong>. <code class=\"language-text\">\\.</code> matches \".\", parentheses are used for <strong>grouping</strong>. Matches for example \"5\", \"1.5\" and \"2.21\".</td>\n</tr>\n</tbody>\n</table>\n<h2 id=\"common-matching-symbols\" style=\"position:relative;\"><a href=\"#common-matching-symbols\" aria-label=\"common matching symbols permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Common matching symbols</h2>\n<table>\n<thead>\n<tr>\n<th>Regular Expression</th>\n<th>Description</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><code class=\"language-text\">.</code></td>\n<td>Matches any character</td>\n</tr>\n<tr>\n<td><code class=\"language-text\">^regex</code></td>\n<td>Finds regex that must match at the beginning of the line.</td>\n</tr>\n<tr>\n<td><code class=\"language-text\">regex$</code></td>\n<td>Finds regex that must match at the end of the line.</td>\n</tr>\n<tr>\n<td><code class=\"language-text\">[abc]</code></td>\n<td>Set definition, can match the letter a or b or c.</td>\n</tr>\n<tr>\n<td><code class=\"language-text\">[abc][vz]</code></td>\n<td>Set definition, can match a or b or c followed by either v or z.</td>\n</tr>\n<tr>\n<td><code class=\"language-text\">[^abc]</code></td>\n<td>When a caret appears as the first character inside square brackets, it negates the pattern. This pattern matches any character except a or b or c.</td>\n</tr>\n<tr>\n<td><code class=\"language-text\">[a-d1-7]</code></td>\n<td>Ranges: matches a letter between a and d and digits from 1 to 7, but not d1.</td>\n</tr>\n<tr>\n<td><code class=\"language-text\">X|Z</code></td>\n<td>Finds X or Z.</td>\n</tr>\n<tr>\n<td><code class=\"language-text\">XZ</code></td>\n<td>Finds X directly followed by Z.</td>\n</tr>\n<tr>\n<td><code class=\"language-text\">$</code></td>\n<td>Checks if a line end follows.</td>\n</tr>\n</tbody>\n</table>\n<h2 id=\"meta-characters\" style=\"position:relative;\"><a href=\"#meta-characters\" aria-label=\"meta characters permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Meta characters</h2>\n<p>The following meta characters have a pre-defined meaning and make certain common patterns easier to use, e.g., \\d instead of [0-9].</p>\n<table>\n<thead>\n<tr>\n<th>Regular Expression</th>\n<th>Description</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><code class=\"language-text\">\\d</code></td>\n<td>Any digit, short for <code class=\"language-text\">[0-9]</code></td>\n</tr>\n<tr>\n<td><code class=\"language-text\">\\D</code></td>\n<td>A non-digit, short for <code class=\"language-text\">[^0-9]</code></td>\n</tr>\n<tr>\n<td><code class=\"language-text\">\\s</code></td>\n<td>A whitespace character, short for <code class=\"language-text\">[ \\t\\n\\x0b\\r\\f]</code></td>\n</tr>\n<tr>\n<td><code class=\"language-text\">\\S</code></td>\n<td>A non-whitespace character, short for <code class=\"language-text\">[^\\t\\n\\x0b\\r\\f]</code></td>\n</tr>\n<tr>\n<td><code class=\"language-text\">\\w</code></td>\n<td>A word character, short for <code class=\"language-text\">[a-zA-Z_0-9]</code></td>\n</tr>\n<tr>\n<td><code class=\"language-text\">\\W</code></td>\n<td>A non-word character <code class=\"language-text\">[^\\w]</code></td>\n</tr>\n<tr>\n<td><code class=\"language-text\">\\S+</code></td>\n<td>Several non-whitespace characters</td>\n</tr>\n<tr>\n<td><code class=\"language-text\">\\b</code></td>\n<td><strong>Asserts</strong> a word boundary where a word character is <code class=\"language-text\">[a-zA-Z0-9_]</code></td>\n</tr>\n</tbody>\n</table>\n<p>Meta characters have the same first letter as their representation, e.g., digit, space, word, and boundary</p>\n<p>Uppercase symbols define the opposite.</p>\n<h2 id=\"quantifier\" style=\"position:relative;\"><a href=\"#quantifier\" aria-label=\"quantifier permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Quantifier</h2>\n<p>A quantifier defines how often an element can occur.</p>\n<table>\n<thead>\n<tr>\n<th>RegExp</th>\n<th>Description</th>\n<th>Examples</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><code class=\"language-text\">{X}</code></td>\n<td>Occurs X number of times, <code class=\"language-text\">{}</code></td>\n<td><code class=\"language-text\">\\d{3}</code> searches for three digits, <code class=\"language-text\">.{10}</code>  for any character sequence of length 10.</td>\n</tr>\n<tr>\n<td><code class=\"language-text\">{X,Y}</code></td>\n<td>Occurs between X and Y times,</td>\n<td><code class=\"language-text\">\\d{1,4}</code> means <code class=\"language-text\">\\d</code> must occur at least once and max four times.</td>\n</tr>\n<tr>\n<td><code class=\"language-text\">*</code></td>\n<td>Occurs zero or more times, is short for <code class=\"language-text\">{0,}</code></td>\n<td><code class=\"language-text\">X*</code>  finds no or several letter X,  <code class=\"language-text\">.*</code> finds any character sequence</td>\n</tr>\n<tr>\n<td><code class=\"language-text\">+</code></td>\n<td>Occurs one or more times, is short for <code class=\"language-text\">{1,}</code></td>\n<td><code class=\"language-text\">X+</code>  Finds one or several letter X</td>\n</tr>\n<tr>\n<td><code class=\"language-text\">?</code></td>\n<td>Occurs no or one times, <code class=\"language-text\">?</code>  is short for <code class=\"language-text\">{0,1}</code></td>\n<td><code class=\"language-text\"> X?</code>  finds no or exactly one letter X</td>\n</tr>\n<tr>\n<td><code class=\"language-text\">*?</code></td>\n<td><code class=\"language-text\">?</code> after a quantifier makes it a <strong>lazy/reluctant quantifier</strong>. It tries to find the smallest match. This makes the regular expression stop at the first match.</td>\n<td></td>\n</tr>\n</tbody>\n</table>\n<h2 id=\"exercise\" style=\"position:relative;\"><a href=\"#exercise\" aria-label=\"exercise permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Exercise</h2>\n<ol>\n<li>Open <a href=\"https://regex101.com/\">https://regex101.com/</a> in your browser.</li>\n<li>Set <code class=\"language-text\">My email address is tiago.princesales@unibz.it</code> as the text to be searched</li>\n<li>Write a regex that matches each occurrence of the letter <code class=\"language-text\">\"a\"</code></li>\n<li>Write a regex that matches each occurrence of the letter <code class=\"language-text\">\"d\"</code></li>\n<li>Write a regex that matches each occurrence of the double letters <code class=\"language-text\">\"dd\"</code></li>\n<li>Write a regex that matches each occurrence of an <code class=\"language-text\">\"i\"</code> followed by either an <code class=\"language-text\">\"s\"</code> or a <code class=\"language-text\">\"t\"</code></li>\n<li>Write a regex that matches any word followed by a period.</li>\n<li>Write a regex that matches only the email address in the string</li>\n</ol>","frontmatter":{"slug":"/regex/writing","title":"Writing Regular Expressions","course":"Programming Project 2021/22","previous":"/regex/string-manipulation","next":"/regex/regex-string","chapter":14,"section":2,"module":"Regular Expressions","banner":null}}},"pageContext":{"slug":"/regex/writing"}},
    "staticQueryHashes": ["800307450"]}