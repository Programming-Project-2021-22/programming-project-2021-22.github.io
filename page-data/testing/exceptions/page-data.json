{
    "componentChunkName": "component---src-templates-template-js",
    "path": "/testing/exceptions",
    "result": {"data":{"markdownRemark":{"html":"<h2 id=\"verifying-expected-exceptions\" style=\"position:relative;\"><a href=\"#verifying-expected-exceptions\" aria-label=\"verifying expected exceptions permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Verifying expected exceptions</h2>\n<p>The following <code class=\"language-text\">Calculator</code> class has a <code class=\"language-text\">divide</code> method that should throw an exception if <code class=\"language-text\">denominator</code> is equal to zero.</p>\n<div class=\"gatsby-highlight\" data-language=\"java\"><pre class=\"language-java\"><code class=\"language-java\"><span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">Calculator</span> <span class=\"token punctuation\">{</span>\n\n  <span class=\"token keyword\">public</span> <span class=\"token keyword\">static</span> <span class=\"token keyword\">int</span> <span class=\"token function\">sum</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> value1<span class=\"token punctuation\">,</span> <span class=\"token keyword\">int</span> value2<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token keyword\">return</span> value1 <span class=\"token operator\">+</span> value2<span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n\n  <span class=\"token keyword\">public</span> <span class=\"token keyword\">static</span> <span class=\"token keyword\">int</span> <span class=\"token function\">multiply</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> value1<span class=\"token punctuation\">,</span> <span class=\"token keyword\">int</span> value2<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token keyword\">return</span> value1 <span class=\"token operator\">*</span> value2<span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n\n  <span class=\"token keyword\">public</span> <span class=\"token keyword\">static</span> <span class=\"token keyword\">int</span> <span class=\"token function\">divide</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> numerator<span class=\"token punctuation\">,</span> <span class=\"token keyword\">int</span> denominator<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token keyword\">return</span> numerator <span class=\"token operator\">/</span> denominator<span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>We can verify that behavior via the <code class=\"language-text\">assertThrows</code> method, as shown below:</p>\n<div class=\"gatsby-highlight\" data-language=\"java\"><pre class=\"language-java\"><code class=\"language-java\"><span class=\"token annotation punctuation\">@Test</span>\n<span class=\"token keyword\">void</span> <span class=\"token function\">divisionByZeroThrowsException</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token function\">assertThrows</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">ArithmeticException</span><span class=\"token punctuation\">.</span><span class=\"token keyword\">class</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">-></span> <span class=\"token punctuation\">{</span>\n      <span class=\"token class-name\">Calculator</span><span class=\"token punctuation\">.</span><span class=\"token function\">divide</span><span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>Note that:</p>\n<ul>\n<li>The first parameter of <code class=\"language-text\">assertThrows</code> is the exception type you expect to be thrown.</li>\n<li>The second parameter is the code you expect to throw the exception.</li>\n</ul>\n<h2 id=\"exercise\" style=\"position:relative;\"><a href=\"#exercise\" aria-label=\"exercise permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Exercise</h2>\n<p>Write test methods that verify if the <code class=\"language-text\">get</code> method of <code class=\"language-text\">ArrayList</code> throws an <code class=\"language-text\">IndexOutOfBoundsException</code> when passing an index out of range (<code class=\"language-text\">index &lt; 0</code> or <code class=\"language-text\">index >= size()</code>).</p>\n<ol>\n<li>Test index <code class=\"language-text\">-1</code> on an non-empty list</li>\n<li>Test index <code class=\"language-text\">0</code> on an empty list</li>\n<li>Test index <code class=\"language-text\">1</code> on a list with a single element</li>\n<li>Test index <code class=\"language-text\">5</code> on a list with 5 elements</li>\n<li>Test that getting the element on index <code class=\"language-text\">0</code> of a non-empty list does not throw an exception.</li>\n</ol>","frontmatter":{"slug":"/testing/exceptions","title":"Expected Exceptions","course":"Programming Project 2021/22","previous":"/testing/hooks","next":"/testing/timeouts","chapter":13,"section":5,"module":"Testing","banner":"https://upload.wikimedia.org/wikipedia/commons/5/59/JUnit_5_Banner.png"}}},"pageContext":{"slug":"/testing/exceptions"}},
    "staticQueryHashes": ["800307450"]}