{
    "componentChunkName": "component---src-templates-template-js",
    "path": "/git/commands",
    "result": {"data":{"markdownRemark":{"html":"<p>Now, let's start using git!</p>\n<h2 id=\"command-line-interface\" style=\"position:relative;\"><a href=\"#command-line-interface\" aria-label=\"command line interface permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Command line interface</h2>\n<p>Before we choose to use any Desktop client, let us learn how to interact with the command-line interface (CLI).</p>\n<p>The <code class=\"language-text\">git</code> command:</p>\n<div class=\"gatsby-highlight\" data-language=\"command-line\"><pre class=\"language-command-line\"><code class=\"language-command-line\">$ git</code></pre></div>\n<p>The <code class=\"language-text\">git</code> command accepts options:</p>\n<div class=\"gatsby-highlight\" data-language=\"command-line\"><pre class=\"language-command-line\"><code class=\"language-command-line\">$ git --version</code></pre></div>\n<p>The <code class=\"language-text\">git</code> command accepts sub-commands:</p>\n<div class=\"gatsby-highlight\" data-language=\"command-line\"><pre class=\"language-command-line\"><code class=\"language-command-line\">$ git log</code></pre></div>\n<p>Many <code class=\"language-text\">git</code> sub-commands also accept options:</p>\n<div class=\"gatsby-highlight\" data-language=\"command-line\"><pre class=\"language-command-line\"><code class=\"language-command-line\">$ git log -p</code></pre></div>\n<p>If you are not sure how to use a sub-command, run:</p>\n<div class=\"gatsby-highlight\" data-language=\"command-line\"><pre class=\"language-command-line\"><code class=\"language-command-line\">$ git help add\n$ git add --help</code></pre></div>\n<p>Many options have short and long \"versions\":</p>\n<div class=\"gatsby-highlight\" data-language=\"command-line\"><pre class=\"language-command-line\"><code class=\"language-command-line\">$ git commit -m &quot;Fixed a typo.&quot;\n$ git commit --message=&quot;Fixed a typo.&quot;</code></pre></div>\n<h2 id=\"creating-an-repository-with-git-init\" style=\"position:relative;\"><a href=\"#creating-an-repository-with-git-init\" aria-label=\"creating an repository with git init permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Creating an repository with <code class=\"language-text\">git init</code></h2>\n<p>A Git repository is a database containing all the information needed to retain and manage the revisions and history of a project.</p>\n<p>A repository retains a complete copy of the entire project throughout its lifetime.</p>\n<p>Let us create a repository:</p>\n<div class=\"gatsby-highlight\" data-language=\"command-line\"><pre class=\"language-command-line\"><code class=\"language-command-line\">$ mkdir ~/tmp/myrepo\n$ cd ~/tmp/myrepo\n$ echo &#39;My website is alive!&#39; &gt; index.html</code></pre></div>\n<p>To initialize a Git repository, run:</p>\n<div class=\"gatsby-highlight\" data-language=\"command-line\"><pre class=\"language-command-line\"><code class=\"language-command-line\">$ git init</code></pre></div>\n<p><code class=\"language-text\">git init</code> will create a hidden directory <code class=\"language-text\">/.git</code> in the current directory. It does not matter if the directory where you ran this command is empty or not.</p>\n<p>To see the structure of the created <code class=\"language-text\">.git</code> directory, run:</p>\n<div class=\"gatsby-highlight\" data-language=\"command-line\"><pre class=\"language-command-line\"><code class=\"language-command-line\">$ find .</code></pre></div>\n<p>or</p>\n<div class=\"gatsby-highlight\" data-language=\"command-line\"><pre class=\"language-command-line\"><code class=\"language-command-line\">$ tree .git</code></pre></div>\n<p>To install the <code class=\"language-text\">tree</code> command, you may use:</p>\n<ul>\n<li><code class=\"language-text\">homebrew</code> on macOS</li>\n<li><code class=\"language-text\">apt-get</code> on Linux</li>\n<li>on Windows, it should already be available</li>\n</ul>\n<h2 id=\"file-management-a-two-stage-process\" style=\"position:relative;\"><a href=\"#file-management-a-two-stage-process\" aria-label=\"file management a two stage process permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>File management: a two-stage process</h2>\n<ol>\n<li>Stage incremental changes</li>\n<li>Commit blocks of change</li>\n</ol>\n<h2 id=\"file-states\" style=\"position:relative;\"><a href=\"#file-states\" aria-label=\"file states permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>File states</h2>\n<p><img src=\"https://i.stack.imgur.com/kslSd.png\" alt=\"\"></p>\n<h2 id=\"checking-the-state-of-the-repository-with-git-status\" style=\"position:relative;\"><a href=\"#checking-the-state-of-the-repository-with-git-status\" aria-label=\"checking the state of the repository with git status permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Checking the state of the repository with <code class=\"language-text\">git status</code></h2>\n<p>To check the current status of the repository, run:</p>\n<div class=\"gatsby-highlight\" data-language=\"command-line\"><pre class=\"language-command-line\"><code class=\"language-command-line\">$ git status</code></pre></div>\n<p>This command will show you:</p>\n<ul>\n<li>Tracked and untracked files</li>\n<li>What happened to your repository's files\n<ul>\n<li>Have they been <strong>added</strong>?</li>\n<li>Have they been <strong>modified</strong>?</li>\n<li>Have they been <strong>deleted</strong>?</li>\n</ul>\n</li>\n</ul>\n<h2 id=\"adding-files-with-git-add\" style=\"position:relative;\"><a href=\"#adding-files-with-git-add\" aria-label=\"adding files with git add permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Adding files with <code class=\"language-text\">git add</code></h2>\n<p>To stage a single file, run:</p>\n<div class=\"gatsby-highlight\" data-language=\"command-line\"><pre class=\"language-command-line\"><code class=\"language-command-line\">$ git add file.txt</code></pre></div>\n<p>To add multiple files, run:</p>\n<div class=\"gatsby-highlight\" data-language=\"command-line\"><pre class=\"language-command-line\"><code class=\"language-command-line\">$ git add file.txt file2.txt file3.txt</code></pre></div>\n<p>To add all files in a directory, run:</p>\n<div class=\"gatsby-highlight\" data-language=\"command-line\"><pre class=\"language-command-line\"><code class=\"language-command-line\">$ git add .</code></pre></div>\n<h2 id=\"committing-changes-with-git-commit\" style=\"position:relative;\"><a href=\"#committing-changes-with-git-commit\" aria-label=\"committing changes with git commit permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Committing changes with <code class=\"language-text\">git commit</code></h2>\n<ul>\n<li>\n<p>A commit is used to record changes to a repository</p>\n</li>\n<li>\n<p>Committing triggers git to record a snapshot of the sate of the repository</p>\n</li>\n<li>\n<p>Git does NOT store a copy of all the files in a repository, only those that changed since the last commit</p>\n</li>\n<li>\n<p>Commits are organized in a chain, with each commit pointing to one or more predecessors</p>\n</li>\n<li>\n<p>To commit staged changes, run:</p>\n<div class=\"gatsby-highlight\" data-language=\"command-line\"><pre class=\"language-command-line\"><code class=\"language-command-line\">$ git commit</code></pre></div>\n<p>This command will trigger the shell to open a default editor for you to describe your commit.</p>\n</li>\n<li>\n<p>If you want to add your commit title, use the <code class=\"language-text\">-m</code> option:</p>\n<div class=\"gatsby-highlight\" data-language=\"command-line\"><pre class=\"language-command-line\"><code class=\"language-command-line\">$ git commit -m &quot;The title of my commit.&quot;</code></pre></div>\n</li>\n<li>\n<p>To also add a commit description, use a second <code class=\"language-text\">-m</code>:</p>\n<div class=\"gatsby-highlight\" data-language=\"command-line\"><pre class=\"language-command-line\"><code class=\"language-command-line\">$ git commit -m &quot;The title of my commit.&quot; -m &quot;The description of my commit.&quot;</code></pre></div>\n</li>\n<li>\n<p>The normal process you will go through is:</p>\n<div class=\"gatsby-highlight\" data-language=\"command-line\"><pre class=\"language-command-line\"><code class=\"language-command-line\"># You create, edit or delete files\n$ echo &#39;Hello world&#39; &gt; file.txt\n\n# You stage your changes\n$ git add file.txt\n\n# You commit your changes\n$ git commit -m &quot;This message describes the commit.&quot;</code></pre></div>\n</li>\n<li>\n<p>You can stage and commit changes all at once by running:</p>\n<div class=\"gatsby-highlight\" data-language=\"command-line\"><pre class=\"language-command-line\"><code class=\"language-command-line\">$ git commit -a -m &quot;Stage and commit all changes.&quot;</code></pre></div>\n<p>The option <code class=\"language-text\">-a</code> will automatically commit all changes made to tracked files, including new, modified or deleted files.</p>\n</li>\n</ul>\n<h2 id=\"putting-all-of-these-commands-together\" style=\"position:relative;\"><a href=\"#putting-all-of-these-commands-together\" aria-label=\"putting all of these commands together permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Putting all of these commands together</h2>\n<p>Here is an interaction in which we use all of the aforementioned commands.</p>\n<ol>\n<li>We create a directory.</li>\n</ol>\n<div class=\"gatsby-highlight\" data-language=\"command-line\"><pre class=\"language-command-line\"><code class=\"language-command-line\">$ mkdir ~/repos/file_state_repo</code></pre></div>\n<ol start=\"2\">\n<li>We initialize a Git repository.</li>\n</ol>\n<div class=\"gatsby-highlight\" data-language=\"command-line\"><pre class=\"language-command-line\"><code class=\"language-command-line\">$ cd ~/repos/file_state_repo\n$ git init\n$ git status\n  On branch master\n\n  No commits yet\n\n  nothing to commit (create/copy files and use &quot;git add&quot; to track)</code></pre></div>\n<ol start=\"3\">\n<li>We add two files to the repository. Note how these files are created in the untracked state.</li>\n</ol>\n<div class=\"gatsby-highlight\" data-language=\"command-line\"><pre class=\"language-command-line\"><code class=\"language-command-line\">$ echo &quot;New data&quot; &gt; file.txt\n$ git status\n  On branch master\n\n  No commits yet\n\n  Untracked files:\n    (use &quot;git add &lt;file&gt;...&quot; to include in what will be committed)\n \n        file.txt\n  nothing added to commit but untracked files present (use &quot;git add&quot; to track)\n \n  Manually create an example junk file\n$ touch data.csv\n$ git status\n  On branch master\n \n  No commits yet\n \n  Untracked files:\n    (use &quot;git add &lt;file&gt;...&quot; to include in what will be committed)\n \n        file.txt\n        data.csv</code></pre></div>\n<ol start=\"4\">\n<li>We start tracking one of the files.</li>\n</ol>\n<div class=\"gatsby-highlight\" data-language=\"command-line\"><pre class=\"language-command-line\"><code class=\"language-command-line\">$ git add data.csv\n$ git status\n  On branch master\n \n  No commits yet\n \n  Changes to be committed:\n    (use &quot;git rm --cached &lt;file&gt;...&quot; to unstage)\n \n          new file:   data.csv\n \n  Untracked files:\n    (use &quot;git add &lt;file&gt;...&quot; to include in what will be committed)\n \n          file.txt</code></pre></div>\n<ol start=\"5\">\n<li>We commit this newly tracked file.</li>\n</ol>\n<div class=\"gatsby-highlight\" data-language=\"command-line\"><pre class=\"language-command-line\"><code class=\"language-command-line\">$ git commit -m &quot;Initial commit&quot;\n  [master (root-commit) 1bf2af7] Initial commit\n   1 file changed, 1 insertion(+)\n   create mode 100644 .gitignore\n$ git status\n  On branch master\n  Untracked files:\n    (use &quot;git add &lt;file&gt;...&quot; to include in what will be committed)\n \n          file.txt\n \n  nothing added to commit but untracked files present (use &quot;git add&quot; to track)</code></pre></div>\n<h2 id=\"configuring-the-commit-author\" style=\"position:relative;\"><a href=\"#configuring-the-commit-author\" aria-label=\"configuring the commit author permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Configuring the commit author</h2>\n<ol>\n<li>You can specify the author in every commit:</li>\n</ol>\n<div class=\"gatsby-highlight\" data-language=\"command-line\"><pre class=\"language-command-line\"><code class=\"language-command-line\">$ git commit -m &quot;Initial commit&quot; --author &quot;Tiago &lt;tiago.princesales@unibz.it&gt;&quot;</code></pre></div>\n<ol start=\"2\">\n<li>You can set up the author in the project's configuration file:</li>\n</ol>\n<div class=\"gatsby-highlight\" data-language=\"command-line\"><pre class=\"language-command-line\"><code class=\"language-command-line\">$ git config user.name &quot;Tiago Prince Sales&quot;\n$ git config user.email &quot;tiago.princesales@unibz.it&quot;</code></pre></div>\n<ol start=\"3\">\n<li>You can set it up globally:</li>\n</ol>\n<div class=\"gatsby-highlight\" data-language=\"command-line\"><pre class=\"language-command-line\"><code class=\"language-command-line\">$ git config --global user.name &quot;Tiago Prince Sales&quot;\n$ git config --global user.email &quot;tiago.princesales@unibz.it&quot;</code></pre></div>\n<p>To see all you current configuration, run:</p>\n<div class=\"gatsby-highlight\" data-language=\"command-line\"><pre class=\"language-command-line\"><code class=\"language-command-line\">$ git config --list</code></pre></div>\n<h2 id=\"amending-your-commits\" style=\"position:relative;\"><a href=\"#amending-your-commits\" aria-label=\"amending your commits permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Amending your commits</h2>\n<ul>\n<li>\n<p>Sometimes, we will make a commit and realize that:</p>\n<ul>\n<li>we forgot to stage some changes</li>\n<li>the commit message is not clear</li>\n</ul>\n</li>\n<li>\n<p>In such occasions, you can run</p>\n<div class=\"gatsby-highlight\" data-language=\"command-line\"><pre class=\"language-command-line\"><code class=\"language-command-line\">$ git add unstagedFile.txt\n$ git commit --amend</code></pre></div>\n</li>\n<li>\n<p>If you simply want to change the commit title, run:</p>\n<div class=\"gatsby-highlight\" data-language=\"command-line\"><pre class=\"language-command-line\"><code class=\"language-command-line\">$ git commit --amend -m &quot;My better title&quot;</code></pre></div>\n</li>\n</ul>\n<h2 id=\"removing-files-with-git-rm\" style=\"position:relative;\"><a href=\"#removing-files-with-git-rm\" aria-label=\"removing files with git rm permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Removing files with <code class=\"language-text\">git rm</code></h2>\n<ul>\n<li>\n<p>To remove a single file, run:</p>\n<div class=\"gatsby-highlight\" data-language=\"command-line\"><pre class=\"language-command-line\"><code class=\"language-command-line\">$ git rm file.txt</code></pre></div>\n</li>\n<li>\n<p>To remove multiple files, run:</p>\n<div class=\"gatsby-highlight\" data-language=\"command-line\"><pre class=\"language-command-line\"><code class=\"language-command-line\">$ git rm file.txt file2.txt file3.txt</code></pre></div>\n</li>\n<li>\n<p>You can also run:</p>\n<div class=\"gatsby-highlight\" data-language=\"command-line\"><pre class=\"language-command-line\"><code class=\"language-command-line\">$ rm file.txt\n$ rm file2.txt\n$ rm file3.text\n$ git add .</code></pre></div>\n</li>\n<li>\n<p>To remove a file and keep it as unstaged, do</p>\n<div class=\"gatsby-highlight\" data-language=\"command-line\"><pre class=\"language-command-line\"><code class=\"language-command-line\">git rm --cached file.txt</code></pre></div>\n</li>\n</ul>\n<h2 id=\"moving-or-renaming-files-with-git-mv\" style=\"position:relative;\"><a href=\"#moving-or-renaming-files-with-git-mv\" aria-label=\"moving or renaming files with git mv permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Moving or renaming files with <code class=\"language-text\">git mv</code></h2>\n<ul>\n<li>\n<p>To move or rename a single file, run:</p>\n<div class=\"gatsby-highlight\" data-language=\"command-line\"><pre class=\"language-command-line\"><code class=\"language-command-line\">$ git mv file.txt newFile.txt</code></pre></div>\n</li>\n<li>\n<p>or</p>\n<div class=\"gatsby-highlight\" data-language=\"command-line\"><pre class=\"language-command-line\"><code class=\"language-command-line\">$ mv file.txt newFile.txt\n$ git rm file.txt\n$ git add newFile.txt</code></pre></div>\n</li>\n<li>\n<p>or</p>\n<div class=\"gatsby-highlight\" data-language=\"command-line\"><pre class=\"language-command-line\"><code class=\"language-command-line\">$ mv file.txt newFile.txt\n$ git add .</code></pre></div>\n</li>\n</ul>\n<h2 id=\"unstaging-changes-with-git-reset\" style=\"position:relative;\"><a href=\"#unstaging-changes-with-git-reset\" aria-label=\"unstaging changes with git reset permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Unstaging changes with <code class=\"language-text\">git reset</code></h2>\n<ul>\n<li>\n<p>To unstage a change to a file, run:</p>\n<div class=\"gatsby-highlight\" data-language=\"command-line\"><pre class=\"language-command-line\"><code class=\"language-command-line\">git reset nope.txt</code></pre></div>\n</li>\n<li>\n<p>To unstage all staged files, run:</p>\n<div class=\"gatsby-highlight\" data-language=\"command-line\"><pre class=\"language-command-line\"><code class=\"language-command-line\">git reset</code></pre></div>\n</li>\n</ul>\n<p>When running the last two commands, <strong>your changes will not be lost.</strong></p>\n<h2 id=\"undoing-a-commit-with-git-reset\" style=\"position:relative;\"><a href=\"#undoing-a-commit-with-git-reset\" aria-label=\"undoing a commit with git reset permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Undoing a commit with <code class=\"language-text\">git reset</code></h2>\n<ul>\n<li>\n<p>To undo the last commit and keep its changes unstaged, run:</p>\n<div class=\"gatsby-highlight\" data-language=\"command-line\"><pre class=\"language-command-line\"><code class=\"language-command-line\">$ git reset --mixed HEAD~1</code></pre></div>\n</li>\n<li>\n<p>To undo the last commit and keep its changes staged, run:</p>\n<div class=\"gatsby-highlight\" data-language=\"command-line\"><pre class=\"language-command-line\"><code class=\"language-command-line\">$ git reset --soft HEAD~1</code></pre></div>\n</li>\n<li>\n<p>To undo the last commit and throw away the changes, run:</p>\n<div class=\"gatsby-highlight\" data-language=\"command-line\"><pre class=\"language-command-line\"><code class=\"language-command-line\">$ git reset --hard HEAD~1</code></pre></div>\n</li>\n<li>\n<p>Note that:</p>\n<ul>\n<li><code class=\"language-text\">HEAD</code> refers to the latest commit on the active branch</li>\n<li><code class=\"language-text\">HEAD~1</code> refers to the second last commit on the active branch</li>\n</ul>\n</li>\n</ul>\n<h2 id=\"reversing-a-commit-with-git-revert\" style=\"position:relative;\"><a href=\"#reversing-a-commit-with-git-revert\" aria-label=\"reversing a commit with git revert permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Reversing a commit with <code class=\"language-text\">git revert</code></h2>\n<ul>\n<li>\n<p>Reverting doesn’t alter the existing history within a repository. Instead, it adds a new commit to its history.</p>\n</li>\n<li>\n<p>To revert your last commit, run:</p>\n<div class=\"gatsby-highlight\" data-language=\"command-line\"><pre class=\"language-command-line\"><code class=\"language-command-line\">$ git revert HEAD</code></pre></div>\n</li>\n<li>\n<p>To revert any commit, run:</p>\n<div class=\"gatsby-highlight\" data-language=\"command-line\"><pre class=\"language-command-line\"><code class=\"language-command-line\">$ git revert 64c852bcb306bceeeec8f77708171c583d807408</code></pre></div>\n</li>\n</ul>\n<h2 id=\"viewing-your-your-repositorys-history\" style=\"position:relative;\"><a href=\"#viewing-your-your-repositorys-history\" aria-label=\"viewing your your repositorys history permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Viewing your your repository's history</h2>\n<ul>\n<li>\n<p>To retrieve the commit history, run:</p>\n<div class=\"gatsby-highlight\" data-language=\"command-line\"><pre class=\"language-command-line\"><code class=\"language-command-line\">$ git log</code></pre></div>\n</li>\n<li>\n<p>To include the changes introduced in each commit, run:</p>\n<div class=\"gatsby-highlight\" data-language=\"command-line\"><pre class=\"language-command-line\"><code class=\"language-command-line\">$ git log -p</code></pre></div>\n</li>\n<li>\n<p>For more details on the last commit, run:</p>\n<div class=\"gatsby-highlight\" data-language=\"command-line\"><pre class=\"language-command-line\"><code class=\"language-command-line\">$ git show</code></pre></div>\n</li>\n<li>\n<p>For more details on a particular commit, run:</p>\n<div class=\"gatsby-highlight\" data-language=\"command-line\"><pre class=\"language-command-line\"><code class=\"language-command-line\">$ git show d6e5980bb9390e853e29b293bc8ecf024b237260</code></pre></div>\n</li>\n<li>\n<p>For a summary of the commits, run:</p>\n<div class=\"gatsby-highlight\" data-language=\"command-line\"><pre class=\"language-command-line\"><code class=\"language-command-line\">$ git show-branch --more=10w</code></pre></div>\n</li>\n</ul>\n<h2 id=\"visualize-git\" style=\"position:relative;\"><a href=\"#visualize-git\" aria-label=\"visualize git permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Visualize Git</h2>\n<ul>\n<li>Let's make things more graphical with Visualize Git:\n<ul>\n<li><a href=\"https://github.com/git-school/visualizing-git\">Source code</a></li>\n<li><a href=\"http://git-school.github.io/visualizing-git\">Running instance</a></li>\n</ul>\n</li>\n<li>Type <code class=\"language-text\">help</code> in the command box to see a list of supported operations\n<ul>\n<li><code class=\"language-text\">pres()</code> = Turn on presenter mode<br></li>\n<li><code class=\"language-text\">undo</code> = Undo the last git command<br></li>\n<li><code class=\"language-text\">redo</code> = Redo the last undone git command<br></li>\n<li><code class=\"language-text\">mode</code> = Change mode (<code class=\"language-text\">local</code> or <code class=\"language-text\">remote</code>)<br></li>\n<li><code class=\"language-text\">clear</code> = Clear the history pane and reset the visualization</li>\n</ul>\n</li>\n</ul>\n<p>Supported Git commands:</p>\n<div class=\"gatsby-highlight\" data-language=\"command-line\"><pre class=\"language-command-line\"><code class=\"language-command-line\">git branch\ngit checkout\ngit cherry_pick\ngit commit\ngit fetch\ngit log\ngit merge\ngit pull\ngit push\ngit rebase\ngit reflog\ngit reset\ngit rev_parse\ngit revert\ngit tag</code></pre></div>","frontmatter":{"slug":"/git/commands","title":"Git commands","course":"Programming Project 2021/22","previous":"/git/shell","next":"/git/gitignore","chapter":3,"section":4,"module":"Git 101"}}},"pageContext":{"slug":"/git/commands"}},
    "staticQueryHashes": ["800307450"]}